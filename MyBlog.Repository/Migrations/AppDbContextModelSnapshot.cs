// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlog.Repository;

#nullable disable

namespace MyBlog.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyBlog.Core.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "Makale 1 Content 1",
                            ContentUrl = "/Makale1",
                            CreatedDate = new DateTime(2023, 3, 26, 2, 58, 47, 977, DateTimeKind.Local).AddTicks(5203),
                            HtmlContent = "",
                            Rate = 0m,
                            ReadCount = 0,
                            Title = "Makale 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Content = "Makale 2 Content 2",
                            ContentUrl = "/Makale2",
                            CreatedDate = new DateTime(2023, 3, 26, 2, 58, 47, 977, DateTimeKind.Local).AddTicks(5230),
                            HtmlContent = "",
                            Rate = 0m,
                            ReadCount = 0,
                            Title = "Makale 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Content = "Makale 3 Content 3",
                            ContentUrl = "/Makale3",
                            CreatedDate = new DateTime(2023, 3, 26, 2, 58, 47, 977, DateTimeKind.Local).AddTicks(5233),
                            HtmlContent = "",
                            Rate = 0m,
                            ReadCount = 0,
                            Title = "Makale 3"
                        });
                });

            modelBuilder.Entity("MyBlog.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asp.NET"
                        },
                        new
                        {
                            Id = 2,
                            Name = ".NET Core"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MsSQL"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Web API"
                        },
                        new
                        {
                            Id = 5,
                            Name = "React Js"
                        });
                });

            modelBuilder.Entity("MyBlog.Core.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Articles"
                        },
                        new
                        {
                            Id = 3,
                            Title = "About"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Contact"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Projects"
                        });
                });

            modelBuilder.Entity("MyBlog.Core.Models.Article", b =>
                {
                    b.HasOne("MyBlog.Core.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyBlog.Core.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
